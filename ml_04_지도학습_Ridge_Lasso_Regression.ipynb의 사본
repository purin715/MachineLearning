{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"ml_04_지도학습_Ridge_Lasso_Regression.ipynb의 사본","provenance":[{"file_id":"1-LfE4I7k_9wJfxIlH-rpm3mQ112a_wcp","timestamp":1626759073093}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"m_B-TcuF2G5X","colab":{"base_uri":"https://localhost:8080/","height":319},"executionInfo":{"status":"ok","timestamp":1626831373017,"user_tz":-540,"elapsed":3301,"user":{"displayName":"김영현","photoUrl":"","userId":"01862996594103916968"}},"outputId":"dcd07f74-bae1-42f2-b15f-2f09220c1285"},"source":["!pip install mglearn\n","import mglearn\n","import sklearn\n","sklearn.__version__"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: mglearn in /usr/local/lib/python3.7/dist-packages (0.1.9)\n","Requirement already satisfied: pillow in /usr/local/lib/python3.7/dist-packages (from mglearn) (7.1.2)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.7/dist-packages (from mglearn) (3.2.2)\n","Requirement already satisfied: cycler in /usr/local/lib/python3.7/dist-packages (from mglearn) (0.10.0)\n","Requirement already satisfied: joblib in /usr/local/lib/python3.7/dist-packages (from mglearn) (1.0.1)\n","Requirement already satisfied: scikit-learn in /usr/local/lib/python3.7/dist-packages (from mglearn) (0.22.2.post1)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from mglearn) (1.19.5)\n","Requirement already satisfied: imageio in /usr/local/lib/python3.7/dist-packages (from mglearn) (2.4.1)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.7/dist-packages (from mglearn) (1.1.5)\n","Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from cycler->mglearn) (1.15.0)\n","Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->mglearn) (2.4.7)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->mglearn) (1.3.1)\n","Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->mglearn) (2.8.1)\n","Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.7/dist-packages (from pandas->mglearn) (2018.9)\n","Requirement already satisfied: scipy>=0.17.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn->mglearn) (1.4.1)\n"],"name":"stdout"},{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'0.22.2.post1'"]},"metadata":{"tags":[]},"execution_count":2}]},{"cell_type":"markdown","metadata":{"id":"gTZHDr3OogcO"},"source":["# 지도학습 - 규제선형모델 (Ridge_Lasso_Regression)\n"]},{"cell_type":"markdown","metadata":{"id":"GeEb2zESkWkI"},"source":["Linear Regression의 문제\n","\n","- 단순 선형회귀 : 단 하나의 특성(feature)을 가지고 라벨값(label) 또는 타깃(target)을 예측하기 위한\n","회귀 모델을 찾는 것\n","- 다중 선형회귀 : 여러 개의 특성을 활용해서 회귀모델을 찾는 것\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"naenDMKWko1w"},"source":["다중 선형 회귀 모델은 과대적합(overfitting) 될 때가 종종 발생\n","\n","주어진 샘플들의 특성값들과 라벨값의 관계를 필요이상으로 너무 자세하게 복잡하게 분석했다는 것\n","- 새로운 데이터가 주어졌을 때 제대로 예측해내기가 어려움 (일반화 능력이 떨어짐)\n","- Ridge / Lasso / Elastic Regression 등장"]},{"cell_type":"markdown","metadata":{"id":"ZxqInZoR3GeR"},"source":["Bias(편향) 오차와 Variance(분산) 오차\n","\n","특성이 증가하면 복잡성이 증가 -> variance는 증가, bias는 감소 -> Overfitting 발생\n","\n","<center>\n"," <img src=\"https://t1.daumcdn.net/cfile/tistory/99CDCC33599AC28F07\" alt=\"편향과 분산\" width=\"40%\" />\n","\n"," Bias(편향) 오차와 Variance(분산) 오차를 표현\n","\n","</center>"]},{"cell_type":"markdown","metadata":{"id":"oD2GVA7J5PIU"},"source":["- bias 감소가 variance의 증가와 같아지는 최적의 point를 찾아야 함\n","- Overfitting 문제 해결 : 데이터의 복잡도 줄이기, 정규화를 통한 분산 감소\n","\n","<center>\n"," <img src=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=http%3A%2F%2Fcfile9.uf.tistory.com%2Fimage%2F996DB433599AC34225B9BD\" alt=\"모델 복잡도\" width=\"40%\" />\n","\n"," 모델 복잡도\n","\n","</center>\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"lW0YyHhd-MAx"},"source":["\n","|구분| 모델 복잡도| 적합성|\n","|---|---|---|\n","|Bias 오차가 낮은 & Variance 오차가 높은|복잡| 과대적합(over fitting)|\n"," |Bias 오차가 높은 Variance 오차가 낮은| 단순| 과소적합(under fitting)|\n","\n","* Bias(편향) 에러가 높아지는 것은  많은 데이터를 고려하지 않아 (=모델이 너무 단순)  정확한 예측을 하지 못하는 경우\n","\n","* Variance(분산) 에러는 노이즈까지 전부 학습하여 (=모델이 너무 복잡) 약간의 input에도 예측 Y 값이 크게 흔들리는 것\n","\n","이 두가지 에러가 상호 Trade-off 관계에 있어서 이 둘을 모두 잡는 것은 불가능 한 딜레마가 발생"]},{"cell_type":"markdown","metadata":{"id":"XggniyAHpb9n"},"source":["정규화(Regularization, 규제)\n","\n","- 과대적합이 되지 않도록 모델을 강제로 제한하는 것을 의미.\n","- 가중치(w)의 값을 조정하여 제약을 주는 것.\n","\n","- L1 규제 : Lasso\n","  - <font  color=yellow>w의 모든 원소에 똑같은 힘으로 규제를 적용하는 방법. 특정 계수들은 0이 됨.      \n","  - 특성선택(Feature Selection)이 자동으로 이루어진다.</font>\n","\n","- L2 규제 : Ridge\n","  - <font  color=yellow>w의 모든 원소에 골고루 규제를 적용하여 0에 가깝게 만든다.</font>\n"]},{"cell_type":"markdown","metadata":{"id":"zHeJUocP-DZR"},"source":["## Ridge Regression"]},{"cell_type":"markdown","metadata":{"id":"xm-rHLfBFiuz"},"source":["평균제곱오차식에 alpha 항이 추가\n","- alpha 값을 크게 하면 패널티 효과가 커지고(가중치 감소),\n","- alpha 값을 작게 하면 그 반대가 된다."]},{"cell_type":"markdown","metadata":{"id":"OC0QA0yjmhrT"},"source":["- 기존 선형회귀에서는 적절한 가중치와 편향을 찾아내는 것이 관건\n","- 추가적인 제약 조건(규제항)을 포함 – 가중치에 대한 제곱의 합을 사용\n","- <font  color=yellow>MSE가 최소가 되게 하는 가중치(w)와 편향(b)을 찾는</font> 동시에 <font  color=yellow> MSE와 규제항의 합이 최소</font>가 되어야 함 -> 가중치 W의 모든 원소가 0이 되거나 0에 근사하도록 -> <font  color=yellow>학습한 가중치 (W)의 제곱을 규제항 (L2 규제)</font>으로 사용\n","\n","> \\\\( cost(W,b)\\\\ =MSE+규제항\\\\ =MSE+\\alpha \\cdot { L }_{ 2 }norm\\\\ =\\cfrac { 1 }{ m } \\sum\\limits _{ i=1 }^{ m }{ (H({ x }^{ (i) })-{ y }^{ (i) }) } ^{ 2 }+\\alpha \\sum\\limits _{ j=1 }^{ n }{ { w }_{ j }^{ 2 } } \\\\ (n : 가중치의 개수, α : 규제의 정도) \\\\)\n","\n","> MSE에 의한 Overfitting을 줄이기 위해 α를 크게 함 -> 정확도 감소 -> α가 너무 크면 MSE의 비중이 작아져서 과소적합 가능성 증가\n","\n","- α가 증가하면 bias는 증가하고 variance는 감소하며 α가 0이 되면 MSE와 동일하게 되어 선형 회귀모델이 됨 -> Ridge 모델은 <font  color=yellow>bias을 약간 손해보면서 variance를 크게 줄여</font> 성능의 향상\n","- 단점 : <font  color=yellow>몇몇 변수가 중요하더라도 모든 변수에 대해 적합을 해야 하고 완벽한 0은 나오지 않음</font> -> 예측의 문제가 아니라 해석의 문제"]},{"cell_type":"markdown","metadata":{"id":"eSxLnLuiIMTI"},"source":["Ridge()\n","```\n","Ridge(alpha, fit_intercept, normalize, copy_X, max_iter, tol, solver, random_state)\n","```\n","\n","- alpha : 값이 클수록 강력한 정규화(규제) 설정하여 분산을 줄임, 양수로 설정\n","- fit_intercept : 모형에 상수항 (절편)이 있는가 없는가를 결정하는 인수 (default : True)\n","- normalize : 매개변수 무시 여부\n","- copy_X : X의 복사 여부\n","- max_iter : 계산에 사용할 작업 수\n","- tol : 정밀도\n","- solver : 계산에 사용할 알고리즘 (auto, svd, cholesky, lsqr, sparse_cg, sag, saga)\n","- random_state : 난수 seed 설정\n"]},{"cell_type":"markdown","metadata":{"id":"B750N3Vajl4k"},"source":["#### Ridge_Lasso_Regression 실습 01\n","\n","확장 보스턴 집값 셋에 선형회귀 적용"]},{"cell_type":"code","metadata":{"id":"WNWaeRb-O3yY"},"source":["import numpy as np\n","import matplotlib.pyplot as plt\n","from sklearn.linear_model import LinearRegression, Ridge, Lasso, ElasticNet\n","%matplotlib inline"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"XZHI09W-jlXi","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626790794002,"user_tz":-540,"elapsed":255,"user":{"displayName":"김영현","photoUrl":"","userId":"01862996594103916968"}},"outputId":"38edcdb7-aa02-4486-d5e6-1b611ba80c32"},"source":["# 확장 보스턴 집값\n","import mglearn\n","from sklearn.model_selection import train_test_split\n","\n","X, y = mglearn.datasets.load_extended_boston()\n","X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=0)\n","X_train.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(379, 104)"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z7Zhj-RadQRO","executionInfo":{"status":"ok","timestamp":1626790797953,"user_tz":-540,"elapsed":340,"user":{"displayName":"김영현","photoUrl":"","userId":"01862996594103916968"}},"outputId":"ab7663b6-3011-448c-a834-76c8e6581a0c"},"source":["model = LinearRegression().fit(X_train, y_train)\n","model.score(X_train, y_train)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9520519609032727"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AU0qtKnodghR","executionInfo":{"status":"ok","timestamp":1626790799823,"user_tz":-540,"elapsed":239,"user":{"displayName":"김영현","photoUrl":"","userId":"01862996594103916968"}},"outputId":"26a4db15-cb53-4afe-9db1-3f23e79e8828"},"source":["model.score(X_test, y_test)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.607472195966557"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"markdown","metadata":{"id":"aiDpGVLn1GOX"},"source":["확장 보스턴 집값 셋에 릿지회귀 적용"]},{"cell_type":"code","metadata":{"id":"6_tFVO-Bk65j","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626790895916,"user_tz":-540,"elapsed":236,"user":{"displayName":"김영현","photoUrl":"","userId":"01862996594103916968"}},"outputId":"9dfba02c-a693-401b-8a24-5f4a9dafa7e1"},"source":["# model_ridge\n","model_ridge = Ridge().fit(X_train, y_train)\n","\n","print(\"훈련 점수 : \", model_ridge.score(X_train, y_train))\n","print(\"테스트 점수 : \", model_ridge.score(X_test, y_test))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["훈련 점수 :  0.8857966585170941\n","테스트 점수 :  0.7527683481744751\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vhmN5s-ed__m","executionInfo":{"status":"ok","timestamp":1626790926914,"user_tz":-540,"elapsed":267,"user":{"displayName":"김영현","photoUrl":"","userId":"01862996594103916968"}},"outputId":"3c0afe97-df22-4a29-ffea-aaa35cac38ac"},"source":["model_ridge_10 = Ridge(alpha=10).fit(X_train, y_train)\n","\n","print(\"훈련 점수 : \", model_ridge_10.score(X_train, y_train))\n","print(\"테스트 점수 : \", model_ridge_10.score(X_test, y_test))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["훈련 점수 :  0.7882787115369614\n","테스트 점수 :  0.6359411489177309\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zzpOtOX6S-fE","executionInfo":{"status":"ok","timestamp":1626790960308,"user_tz":-540,"elapsed":262,"user":{"displayName":"김영현","photoUrl":"","userId":"01862996594103916968"}},"outputId":"612beb58-ec9a-4c15-e532-d1174ed5a13f"},"source":["model_ridge_01 = Ridge(alpha=0.1).fit(X_train, y_train)\n","\n","print(\"훈련 점수 : \", model_ridge_01.score(X_train, y_train))\n","print(\"테스트 점수 : \", model_ridge_01.score(X_test, y_test))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["훈련 점수 :  0.9282273685001992\n","테스트 점수 :  0.7722067936479818\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":282},"id":"gGqApnm5e7ol","executionInfo":{"status":"ok","timestamp":1626791383560,"user_tz":-540,"elapsed":271,"user":{"displayName":"김영현","photoUrl":"","userId":"01862996594103916968"}},"outputId":"9c3d5250-30e3-4798-8d9d-0e24021c9659"},"source":["plt.plot(model_ridge_10.coef_, '^', color = 'red')\n","plt.plot(model_ridge.coef_, 's', color='green')\n","plt.plot(model_ridge_01.coef_, 'v', color='blue')\n","plt.plot(model.coef_, 'o', color='orange')\n","\n","plt.hlines(0, 0, len(model.coef_))\n","plt.ylim(-25, 25)\n","# 알파값이 작아질 수록 퍼진다"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(-25.0, 25.0)"]},"metadata":{"tags":[]},"execution_count":23},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"VMETHZ_bm9dv"},"source":["## Lasso Regression"]},{"cell_type":"markdown","metadata":{"id":"q7W0ttDOJhLJ"},"source":["- 릿지 회귀의 단점을 해결하기 위해 대안으로 나온 방법\n","학습한 가중치의 절대값을 규제항(L1 규제)으로 사용 – 가중치의 절대값의 합을 사용\n","- 학습한 가중치의 절대값을 규제항(L1 규제)으로 사용 – 가중치의 절대값의 합을 사용\n","\n",">$$  \\begin{align} \n","cost(W,b)   \\\\ \n","& =MSE+규제항 \\\\  \n","& =MSE+\\alpha \\cdot { L }_{ 1 }norm \\\\  \n","& =\\cfrac { 1 }{ m } \\sum\\limits_{ i=1 }^{ m }{ (H({ x }^{ (i) })-{ y }^{ (i) }) } ^{ 2 }+\\alpha \\sum\\limits_{ j=1 }^{ n }{ \\left| { w }_{ j } \\right|  }  \\\\\n","& (n:가중치의개수,α:규제의정도)  \\end{align} $$\n","\n","\n","- 적당한 α만으로 몇몇 계수를 정확하게 0으로 만들 수 있음 -> 해석을 용이하게 함\n","- MSE와 규제항의 합이 최소가 되게 하는 파라미터 W와 b를 찾는 것이 Lasso의 목표\n","- MSE항이 작아질 수록 오차가 작아지고, L1-norm이 작아질 수록 많은 가중치들이 0이 되거나 0에 가까워짐 -> 데이터 전 처리에 주로 사용 (필요 없는 데이터 제거)\n","- Ridge와 Lasso의 성능 차이는 사용하는 데이터의 상황에 따라 다름 -> 유의미한 변수가 적을 때는 Lasso가 반대의 경우는 Ridge가 더 좋은 성능을 보임."]},{"cell_type":"markdown","metadata":{"id":"x60tFa_hIwF3"},"source":["Lasso()\n","```\n","Lasso(alpha, fit_intercept, normalize, precompute, copy_X, max_iter, tol, warm_start, positive, solver, random_state, selection)\n","```\n","- alpha : 값이 클수록 강력한 정규화(규제) 설정하여 분산을 줄임, 양수로 설정\n","- fit_intercept : 모형에 상수항 (절편)이 있는가 없는가를 결정하는 인수 (default : True)\n","- normalize : 매개변수 무시 여부\n","- precompute : 계산속도를 높이기 위해 미리 계산된 그램 매트릭스를 사용할 것인지 여부\n","- copy_X : X의 복사 여부\n","- max_iter : 계산에 사용할 작업 수\n","- tol : 정밀도\n","- warm_start : 이전 모델을 초기화로 적합하게 사용할 것인지 여부\n","- positive : 계수가 양수로 사용할 것인지 여부\n","- solver : 계산에 사용할 알고리즘 (auto, svd, cholesky, lsqr, sparse_cg, sag, saga)\n","- random_state : 난수 seed 설정\n","- selection : 계수의 업데이트 방법 설정 (random으로 설정하면 tol이 1e-4보다 높을 때 빠른 수렴)"]},{"cell_type":"code","metadata":{"id":"5UKOcWuwnpO9","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626792764735,"user_tz":-540,"elapsed":240,"user":{"displayName":"김영현","photoUrl":"","userId":"01862996594103916968"}},"outputId":"00a75d8e-74c2-4090-9078-eb2a2a14761d"},"source":["from sklearn.linear_model import Lasso\n","\n","# lasso\n","model_lasso = Lasso().fit(X_train, y_train)\n","\n","print(\"훈련점수 : \", model_lasso.score(X_train, y_train))\n","print('테스트점수:', model_lasso.score(X_test, y_test) )\n","print(\"사용한 특성 수 : \", model_lasso.coef_)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["훈련점수 :  0.29323768991114607\n","테스트점수: 0.20937503255272294\n","사용한 특성 수 :  [-0.          0.         -0.          0.         -0.          0.\n"," -0.          0.         -0.         -0.         -0.          0.\n"," -5.3529079  -0.          0.         -0.          0.         -0.\n"," -0.         -0.         -0.         -0.         -0.         -0.\n"," -0.         -0.          0.          0.          0.          0.\n","  0.          0.          0.          0.          0.          0.\n","  0.          0.         -0.          0.         -0.         -0.\n"," -0.         -0.         -0.         -0.         -0.         -0.\n"," -0.          0.          0.          0.          0.          0.\n","  0.          0.          0.          0.         -0.         -0.\n"," -0.         -0.         -0.         -0.         -0.         -0.\n"," -0.         -0.          0.          0.          0.         -0.\n"," -0.         -0.          0.         -0.         -0.          0.\n"," -0.         -1.05063037 -3.3104274  -0.         -0.          0.\n"," -0.         -0.         -0.          0.         -0.         -0.41386744\n"," -0.         -0.         -0.         -0.         -0.         -0.\n"," -0.         -0.         -0.         -0.         -0.          0.\n"," -0.         -0.        ]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ucNkl0J1UY9_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626793058615,"user_tz":-540,"elapsed":270,"user":{"displayName":"김영현","photoUrl":"","userId":"01862996594103916968"}},"outputId":"d9fe3cda-70b3-44ec-e5c5-abcf665f4dde"},"source":["model_lasso_001 = Lasso(alpha=0.01, max_iter=10000).fit(X_train, y_train)\n","# max_iter : 몇번 반복할 건지, 에폭과 비슷\n","\n","print(\"훈련점수 : \", model_lasso_001.score(X_train, y_train))\n","print(\"테스트점수 : \", model_lasso_001.score(X_test, y_test))\n","print(\"사용한 특성 수 : \", np.sum(model_lasso_001.coef_ != 0))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["훈련점수 :  0.8962226511086497\n","테스트점수 :  0.7656571174549982\n","사용한 특성 수 :  33\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4fL2oZ0Vinq7","executionInfo":{"status":"ok","timestamp":1626793060100,"user_tz":-540,"elapsed":439,"user":{"displayName":"김영현","photoUrl":"","userId":"01862996594103916968"}},"outputId":"84ebe3ed-5441-4325-bcf3-7f423022bc89"},"source":["model_lasso_00001 = Lasso(alpha=0.0001, max_iter=10000).fit(X_train, y_train)\n","\n","print(\"훈련점수 : \", model_lasso_00001.score(X_train, y_train))\n","print(\"테스트점수 : \", model_lasso_00001.score(X_test, y_test))\n","print(\"사용한 특성 수 : \", np.sum(model_lasso_00001.coef_ != 0))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["훈련점수 :  0.9501169448631187\n","테스트점수 :  0.6506993940304697\n","사용한 특성 수 :  97\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_coordinate_descent.py:476: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 653.181797420264, tolerance: 3.233182126649076\n","  positive)\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":282},"id":"uZHOVDEQjDLz","executionInfo":{"status":"ok","timestamp":1626793116493,"user_tz":-540,"elapsed":702,"user":{"displayName":"김영현","photoUrl":"","userId":"01862996594103916968"}},"outputId":"11968877-6297-402d-9e7c-8f3c45897489"},"source":["plt.plot(model_lasso.coef_, 's', label='Lasso alpha=1')\n","plt.plot(model_lasso_001.coef_, '^', label='Lasso alpha=0.01')\n","plt.plot(model_lasso_00001.coef_, 'v', label='Lasso alpha=0.0001')\n","\n","plt.plot(model.coef_, 'o', label='LinearRegresssion')\n","plt.legend()\n","plt.ylim(-25, 25)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(-25.0, 25.0)"]},"metadata":{"tags":[]},"execution_count":33},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"nX0vWJyMzyHw"},"source":["## ElasticNet Regression"]},{"cell_type":"markdown","metadata":{"id":"qNhBEvwxz1nb"},"source":["- 선형 회귀에 2가지 규제항 (L1 규제항, L2 규제항)을 추가한 것\n","\n","> \\begin{align}\n","cost(W,b)\\\\ \n","& =MSE+규제항\\\\\n","& =MSE+ { \\alpha }_{ 1 }\\cdot { L }_{ 1 }norm + { \\alpha }_{ 2 }\\cdot { L }_{ 2 }norm\\\\\n","& =\\cfrac { 1 }{ m } \\sum\\limits _{ i=1 }^{ m }{ (H({ x }^{ (i) })-{ y }^{ (i) }) } ^{ 2 } +\\alpha _{ 1 }\\sum\\limits _{ j=1 }^{ n }{ \\left| { w }_{ j } \\right|  +\\alpha _{ 2 }\\sum\\limits_{ j=1 }^{ n }{ { w }_{ j }^{ 2 } } } \\\\\n","& (n:가중치의개수,α:규제의정도) \\end{align}"]},{"cell_type":"markdown","metadata":{"id":"Sulpmmg910dE"},"source":["ElasticNet()\n","```\n","ElasticNet(alpha, l1_ratio, fit_intercept, normalize, precompute, max_iter, copy_X,\n","tol, warm_start, positive, random_state, selection)\n","```\n","- alpha : 값이 클수록 강력한 정규화(규제) 설정하여 분산을 줄임, 양수로 설정\n","- l1_ratio : L1 규제의 비율 (혼합비율?)\n","- fit_intercept : 모형에 상수항 (절편)이 있는가 없는가를 결정하는 인수 (default : True)\n","- normalize : 매개변수 무시 여부\n","- precompute : 계산속도를 높이기 위해 미리 계산된 그램 매트릭스를 사용할 것인지 여부\n","- copy_X : X의 복사 여부\n","- max_iter : 계산에 사용할 작업 수\n","- tol : 정밀도\n","- warm_start : 이전 모델을 초기화로 적합하게 사용할 것인지 여부\n","- positive : 계수가 양수로 사용할 것인지 여부\n","- random_state : 난수 seed 설정\n","- selection : 계수의 업데이트 방법 설정 (random으로 설정하면 tol이 1e-4보다 높을 때 빠른 수렴)"]},{"cell_type":"markdown","metadata":{"id":"0eXTUaIV94K9"},"source":["## 다항회귀"]},{"cell_type":"code","metadata":{"id":"yHOmjG5DxhDn","colab":{"base_uri":"https://localhost:8080/","height":282},"executionInfo":{"status":"ok","timestamp":1626793563489,"user_tz":-540,"elapsed":284,"user":{"displayName":"김영현","photoUrl":"","userId":"01862996594103916968"}},"outputId":"808e1a17-8440-480e-b807-fa1c6b0e099b"},"source":["import numpy as np\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","\n","n = 200\n","x = 6 * np.random.rand(n, 1) - 3\n","y = 0.5 * x**2 + 1 * x + 2 + np.random.rand(n, 1)\n","\n","plt.scatter(x, y, s=1)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.collections.PathCollection at 0x7fcab162e4d0>"]},"metadata":{"tags":[]},"execution_count":38},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"SpYNOsFfyNL_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626793741138,"user_tz":-540,"elapsed":225,"user":{"displayName":"김영현","photoUrl":"","userId":"01862996594103916968"}},"outputId":"f9f3600d-b79c-4d0c-de0b-9d5b689d5502"},"source":["from sklearn.linear_model import LinearRegression\n","from sklearn.preprocessing import PolynomialFeatures\n","\n","# 데이터 변환 과정과 머신러닝을 연결해주는 파이프라인\n","from sklearn.pipeline import make_pipeline  \n","\n","poly_features = PolynomialFeatures(degree=2, include_bias=False)\n","x_poly = poly_features.fit_transform(x)\n","x_poly.shape, x.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((200, 2), (200, 1))"]},"metadata":{"tags":[]},"execution_count":40}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"S8pcOzpwo8uL","executionInfo":{"status":"ok","timestamp":1626793742522,"user_tz":-540,"elapsed":2,"user":{"displayName":"김영현","photoUrl":"","userId":"01862996594103916968"}},"outputId":"f6417168-1439-4c4e-d274-face741459e1"},"source":["model = LinearRegression()\n","model.fit(x_poly, y)\n","model.coef_, model.intercept_"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([[0.98895464, 0.48970918]]), array([2.53653525]))"]},"metadata":{"tags":[]},"execution_count":41}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"M-N9KJSLpNLt","executionInfo":{"status":"ok","timestamp":1626793756313,"user_tz":-540,"elapsed":256,"user":{"displayName":"김영현","photoUrl":"","userId":"01862996594103916968"}},"outputId":"fdaefccc-2948-4fbb-8c73-3305cf4322cf"},"source":["model_lr = make_pipeline(poly_features, LinearRegression())\n","model_lr\n","model_lr.fit(x_poly, y)\n","model_lr.steps[1][1].coef_, model_lr.steps[1][1].intercept_"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([[ 0.98114349,  0.25443632,  0.25443632,  0.00163658, -0.00264744]]),\n"," array([2.52077052]))"]},"metadata":{"tags":[]},"execution_count":43}]},{"cell_type":"code","metadata":{"id":"gu2AjaFHzHbv","colab":{"base_uri":"https://localhost:8080/","height":282},"executionInfo":{"status":"ok","timestamp":1626763621864,"user_tz":-540,"elapsed":365,"user":{"displayName":"김영현","photoUrl":"","userId":"01862996594103916968"}},"outputId":"40ddc17a-79bf-4ca8-d1cd-e570c64cfcba"},"source":["# 다항회귀 그래프\n","plt.scatter(x, y, s=5)\n","xx = np.linspace(-3, 3, 1000)\n","yy = model_lr.predict(xx[:, np.newaxis]) # reshape 해도 됨\n","plt.scatter(xx, yy, marker='.')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.collections.PathCollection at 0x7f07bfd9af50>"]},"metadata":{"tags":[]},"execution_count":48},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"M8EjGdzxewY5"},"source":["#### PolynomialFeatures()\n","```\n","PolynomialFeatures(degree=2, *, interaction_only=False, include_bias=True)\n","```\n","\n","- degree : 차수\n","- interaction_only: True면 2차항에서 상호작용항만 출력\n","- include_bias : 상수항 생성 여부\n","\n","\n","다항 변환\n","\n","- 입력값  x 를 다항식으로 변환한다.\n","\n","> \\\\( x \\;\\; \\rightarrow \\;\\; [ 1, x, x^2, x^3, \\cdots ] \\\\) <br>\n"," \n","> 만약 열의 갯수가 두 개이고 2차 다항식으로 변환하는 경우에는 다음처럼 변환한다.\n","\n","> \\\\( [x_1, x_2] \\;\\; \\rightarrow \\;\\; [ 1, x_1, x_2, x_1^2, x_1x_2, x_2^2 ] \\\\)  <br>\n","\n","> 예) <br>\n","> \\\\( [x_1=0, x_2=1]  \\;\\; \\rightarrow \\;\\; [1, 0, 1, 0, 0, 1] \\\\) <br>\n","\n","> \\\\( [x_1=2, x_2=3]  \\;\\; \\rightarrow \\;\\; [1,2,3,4,6,9] \\\\)\n"," \n"]},{"cell_type":"code","metadata":{"id":"jHM8-qVkhLWs","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626794646966,"user_tz":-540,"elapsed":3,"user":{"displayName":"김영현","photoUrl":"","userId":"01862996594103916968"}},"outputId":"b9c534be-9fdb-4b78-b793-84f850ce29ac"},"source":["from sklearn.preprocessing import PolynomialFeatures\n","\n","X = np.arange(6).reshape(3, 2)\n","X"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0, 1],\n","       [2, 3],\n","       [4, 5]])"]},"metadata":{"tags":[]},"execution_count":45}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8cfWx6jwriUb","executionInfo":{"status":"ok","timestamp":1626794648132,"user_tz":-540,"elapsed":3,"user":{"displayName":"김영현","photoUrl":"","userId":"01862996594103916968"}},"outputId":"9665507f-5793-4b3c-df0d-1d445e69bf7e"},"source":["poly = PolynomialFeatures(2)\n","poly.fit_transform(X)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 1.,  0.,  1.,  0.,  0.,  1.],\n","       [ 1.,  2.,  3.,  4.,  6.,  9.],\n","       [ 1.,  4.,  5., 16., 20., 25.]])"]},"metadata":{"tags":[]},"execution_count":46}]},{"cell_type":"code","metadata":{"id":"xDAye58LhOO-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626763972690,"user_tz":-540,"elapsed":319,"user":{"displayName":"김영현","photoUrl":"","userId":"01862996594103916968"}},"outputId":"dd2c8e04-a03b-4651-fa77-8bd74065173b"},"source":["# 다항차수는 적용하지 않고, 오직 상호작용(교호작용) 효과만을 분석하려면 \n","# interaction_only=True 옵션을 설정해주면 됩니다. \n","# degree를 가지고 교호작용을 몇 개 수준까지 볼지 설정해줄 수 있습니다.\n","\n","poly = PolynomialFeatures(2, interaction_only=True)\n","poly.fit_transform(X)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 1.,  0.,  1.,  0.],\n","       [ 1.,  2.,  3.,  6.],\n","       [ 1.,  4.,  5., 20.]])"]},"metadata":{"tags":[]},"execution_count":51}]},{"cell_type":"markdown","metadata":{"id":"qQZh4ZjczIEl"},"source":["## Linear / Ridge / Lasso / ElasticNet Regression의 비교"]},{"cell_type":"markdown","metadata":{"id":"mtF4iw6UDHxR"},"source":["|구분| 릿지회귀| 라쏘회귀| 엘라스틱넷|\n","|---|---|---|---|\n","|제약식| L2 norm| L1 norm| L1+L2 norm|\n","|변수선택 |불가능| 가능| 가능|\n","|solution| closed form| 명시해 없음| 명시해 없음|\n","|장점| 변수간 상관관계가 높아도 좋은 성능| 변수간 상관관계가 높으면 성능↓| 변수간 상관관계를 반영한 정규화|\n","|특징| 크기가 큰 변수를 우선 적으로 줄임|비중요 변수를 우선적 으로 줄임|상관관계가 큰 변수를 동시에 선택/배제|"]},{"cell_type":"code","metadata":{"id":"3zTMfk8EavsH","colab":{"base_uri":"https://localhost:8080/","height":282},"executionInfo":{"status":"ok","timestamp":1626795306972,"user_tz":-540,"elapsed":781,"user":{"displayName":"김영현","photoUrl":"","userId":"01862996594103916968"}},"outputId":"e5e64ac0-459c-420c-9add-c17f8f7e0dbb"},"source":["import seaborn as sb\n","import pandas as pd\n","\n","np.random.seed(0)\n","n_samples = 30\n","X = np.sort(np.random.rand(n_samples))\n","y = np.sin(2 * np.pi * X) + np.random.rand(n_samples) * 0.1\n","plt.scatter(X, y, s=5)\n","\n","# X = X[:, np.newaxis]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.collections.PathCollection at 0x7fcaac65b890>"]},"metadata":{"tags":[]},"execution_count":47},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":203},"id":"tuS1sUB6s32s","executionInfo":{"status":"ok","timestamp":1626795334357,"user_tz":-540,"elapsed":262,"user":{"displayName":"김영현","photoUrl":"","userId":"01862996594103916968"}},"outputId":"f67bc1cb-b381-400e-df68-3e38fce1bbfc"},"source":["df = pd.DataFrame({'x':X, 'y':y})\n","df.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>x</th>\n","      <th>y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.020218</td>\n","      <td>0.153150</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.071036</td>\n","      <td>0.509084</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.087129</td>\n","      <td>0.566126</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.118274</td>\n","      <td>0.733447</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.143353</td>\n","      <td>0.785650</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["          x         y\n","0  0.020218  0.153150\n","1  0.071036  0.509084\n","2  0.087129  0.566126\n","3  0.118274  0.733447\n","4  0.143353  0.785650"]},"metadata":{"tags":[]},"execution_count":48}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"m7eD1XFouKZs","executionInfo":{"status":"ok","timestamp":1626796022661,"user_tz":-540,"elapsed":269,"user":{"displayName":"김영현","photoUrl":"","userId":"01862996594103916968"}},"outputId":"645353e1-9f22-4456-e633-8abc48654733"},"source":["poly = PolynomialFeatures(9)\n","model_lr = make_pipeline(poly, LinearRegression())\n","model_lr.fit(X[:, np.newaxis], y)\n","model_lr.steps[1][1].coef_"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 0.00000000e+00,  7.78317548e+00,  9.86678487e+00, -4.35959736e+02,\n","        2.87425798e+03, -9.61637716e+03,  1.78671521e+04, -1.86394791e+04,\n","        1.02540980e+04, -2.32137252e+03])"]},"metadata":{"tags":[]},"execution_count":51}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":286},"id":"rWydCsJpuRFl","executionInfo":{"status":"ok","timestamp":1626796125077,"user_tz":-540,"elapsed":654,"user":{"displayName":"김영현","photoUrl":"","userId":"01862996594103916968"}},"outputId":"dd5e2af3-5752-41cd-ebc5-ee1ee3013e93"},"source":["xx = np.linspace(0, 1, 1000)\n","yy = model_lr.predict(xx.reshape(-1, 1))\n","plt.scatter(xx, yy, s=5)\n","plt.scatter(X, y, s=10)\n","plt.ylim(-1.5, 1.5)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(-1.5, 1.5)"]},"metadata":{"tags":[]},"execution_count":53},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":286},"id":"4NyedJMvuqhu","executionInfo":{"status":"ok","timestamp":1626796303380,"user_tz":-540,"elapsed":770,"user":{"displayName":"김영현","photoUrl":"","userId":"01862996594103916968"}},"outputId":"7d164456-19e8-4649-e058-31b8fd4a393d"},"source":["model_ridge = make_pipeline(poly, Ridge(alpha=0.01))\n","model_ridge.fit(X.reshape(-1, 1), y)\n","\n","xx = np.linspace(0, 1, 1000)\n","yy = model_ridge.predict(xx.reshape(-1, 1))\n","plt.scatter(xx, yy, s=5)\n","plt.scatter(X, y, s=10)\n","plt.ylim(-1.5, 1.5)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(-1.5, 1.5)"]},"metadata":{"tags":[]},"execution_count":55},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"ocqDGIx4v9iw","colab":{"base_uri":"https://localhost:8080/","height":359},"executionInfo":{"status":"ok","timestamp":1626796386391,"user_tz":-540,"elapsed":532,"user":{"displayName":"김영현","photoUrl":"","userId":"01862996594103916968"}},"outputId":"e6cedb70-ebc9-4284-c633-14e168eb9ad3"},"source":["model_lasso = make_pipeline(poly, Lasso(alpha=0.001))\n","model_lasso.fit(X[:, np.newaxis], y)\n","\n","xx = np.linspace(0, 1, 1000)\n","yy = model_lasso.predict(xx.reshape(-1, 1))\n","plt.scatter(xx, yy, s=5)\n","plt.scatter(X, y, s=10)\n","plt.ylim(-1.5, 1.5)\n","model_lasso.steps[1][1].coef_"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_coordinate_descent.py:476: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations. Duality gap: 0.004328390428244733, tolerance: 0.0010052499746308068\n","  positive)\n"],"name":"stderr"},{"output_type":"execute_result","data":{"text/plain":["array([ 0.        ,  2.29711386, -6.56944059, -0.        ,  0.        ,\n","        0.        ,  1.88370343,  2.27407731,  0.        ,  0.        ])"]},"metadata":{"tags":[]},"execution_count":57},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"Izm9Yi6Qnqir"},"source":[""],"execution_count":null,"outputs":[]}]}